package api.simpeg.dao;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;

import api.simpeg.model.Absensi;

public class AbsensiDAOJDBCTemplateImpl implements AbsensiDAO{
private DataSource dataSaource;
	
	@Autowired
	public void setDataSource(DataSource dataSource){
		this.dataSaource = dataSource;
	}
	
	@Override
	public List<Absensi> get_hadir(String unit_kerja, String tgl){
		String query = "select u.nama_baru, o.id, count(o.status) as jumlah from ((unit_kerja as u INNER JOIN current_lokasi_kerja as c on u.id_unit_kerja = c.id_unit_kerja) inner join oasys_attendance_log as o on o.id_pegawai=c.id_pegawai ) where o.status='PRESENT' AND o.date_time like '"+ tgl +"%' AND u.nama_baru='"+unit_kerja +"' GROUP BY (u.nama_baru)";
		JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSaource);
		List<Absensi> absList = new ArrayList<Absensi>();
		
		List<Map<String, Object>> absRows = jdbcTemplate.queryForList(query);
		
		for (Map<String, Object> absRow : absRows){
			Absensi absensi = new Absensi();
			absensi.setId(Integer.parseInt(String.valueOf(absRow.get("id"))));
			absensi.setJumlah(Integer.parseInt(String.valueOf(absRow.get("jumlah"))));
			absensi.setUnit_kerja(String.valueOf(absRow.get("nama_baru")));
			absList.add(absensi);
		}
		return absList;
	}
	
	@Override
	public List<Absensi> get_sakit(String unit_kerja, String tgl){
		String query = "select u.nama_baru, o.id, count(o.status) as jumlah from ((unit_kerja as u INNER JOIN current_lokasi_kerja as c on u.id_unit_kerja = c.id_unit_kerja) inner join oasys_absent_reason_log as o on o.id_pegawai=c.id_pegawai ) where o.status='SICK' AND o.date_time like '"+ tgl +"%' AND u.nama_baru='"+unit_kerja +"' GROUP BY (u.nama_baru)";
		JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSaource);
		List<Absensi> absList = new ArrayList<Absensi>();
		
		List<Map<String, Object>> absRows = jdbcTemplate.queryForList(query);
		
		for (Map<String, Object> absRow : absRows){
			Absensi absensi = new Absensi();
			absensi.setId(Integer.parseInt(String.valueOf(absRow.get("id"))));
			absensi.setJumlah(Integer.parseInt(String.valueOf(absRow.get("jumlah"))));
			absensi.setUnit_kerja(String.valueOf(absRow.get("nama_baru")));
			absList.add(absensi);
		}
		return absList;
	}
	
	@Override
	public List<Absensi> get_ijin(String unit_kerja, String tgl){
		String query = "select u.nama_baru, o.id, count(o.status) as jumlah from ((unit_kerja as u INNER JOIN current_lokasi_kerja as c on u.id_unit_kerja = c.id_unit_kerja) inner join oasys_absent_reason_log as o on o.id_pegawai=c.id_pegawai ) where o.status='EXCUSED' AND o.date_time like '"+ tgl +"%' AND u.nama_baru='"+unit_kerja +"' GROUP BY (u.nama_baru)";
		JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSaource);
		List<Absensi> absList = new ArrayList<Absensi>();
		
		List<Map<String, Object>> absRows = jdbcTemplate.queryForList(query);
		
		for (Map<String, Object> absRow : absRows){
			Absensi absensi = new Absensi();
			absensi.setId(Integer.parseInt(String.valueOf(absRow.get("id"))));
			absensi.setJumlah(Integer.parseInt(String.valueOf(absRow.get("jumlah"))));
			absensi.setUnit_kerja(String.valueOf(absRow.get("nama_baru")));
			absList.add(absensi);
		}
		return absList;
	}
	
	@Override
	public List<Absensi> get_alpha(String unit_kerja, String tgl){
		String query = "select u.nama_baru, o.id, count(o.status) as jumlah from ((unit_kerja as u INNER JOIN current_lokasi_kerja as c on u.id_unit_kerja = c.id_unit_kerja) inner join oasys_absent_reason_log as o on o.id_pegawai=c.id_pegawai ) where o.status='ABSENT' AND o.date_time like '"+ tgl +"%' AND u.nama_baru='"+unit_kerja +"' GROUP BY (u.nama_baru)";
		JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSaource);
		List<Absensi> absList = new ArrayList<Absensi>();
		
		List<Map<String, Object>> absRows = jdbcTemplate.queryForList(query);
		
		for (Map<String, Object> absRow : absRows){
			Absensi absensi = new Absensi();
			absensi.setId(Integer.parseInt(String.valueOf(absRow.get("id"))));
			absensi.setJumlah(Integer.parseInt(String.valueOf(absRow.get("jumlah"))));
			absensi.setUnit_kerja(String.valueOf(absRow.get("nama_baru")));
			absList.add(absensi);
		}
		return absList;
	}
}