package api.simpeg.dao;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import api.simpeg.model.Absensi_mobile;
import api.simpeg.simpeg_api.dao.ApiAksesDAO;
import api.simpeg.simpeg_api.dao.AplikasiAPIDAO;
import api.simpeg.simpeg_api.dao.LogAPIDAO;
import api.simpeg.simpeg_api.dao.MethodAPIDAO;
import api.simpeg.simpeg_api.model.Api_akses;
import api.simpeg.simpeg_api.model.Aplikasi_api;

@Repository
public class AbsensiMobileDAOJDBCTemplateImpl implements AbsensiMobileDAO{
	private DataSource dataSource;
	
	@Autowired
	public void setDataSource(DataSource dataSource){
		this.dataSource = dataSource;
	}
	
	@Override
	public int hadir(String id_pegawai, String long_lat, String api_key){
		ApplicationContext ctx = new ClassPathXmlApplicationContext("spring.xml");
        MethodAPIDAO methodDAO = ctx.getBean("methodAPIDAO", MethodAPIDAO.class);
        AplikasiAPIDAO aplikasiDAO = ctx.getBean("aplikasiAPIDAO", AplikasiAPIDAO.class);
        LogAPIDAO logDAO = ctx.getBean("logAPIDAO", LogAPIDAO.class);
        ApiAksesDAO apiDAO = ctx.getBean("apiAksesDAO", ApiAksesDAO.class);
        
        //atribut untuk mengambil data aplikasi dan method
		int id_method;
		String api_keydb;
		int id_aplikasi;
		int id_app;
		String nama_method = "absensi_mobile/hadir";
		Aplikasi_api aplikasi_api = new Aplikasi_api();
		Api_akses app_akses = new Api_akses();
		
		aplikasi_api = aplikasiDAO.get_aplikasi_detail(api_key);
		id_aplikasi = aplikasi_api.getId_aplikasi();
		api_keydb = aplikasi_api.getApi_key(); 
		
		id_method = methodDAO.get_id(nama_method);
		
		app_akses = apiDAO.get_by_method(id_method);
		id_app = app_akses.getId_aplikasi();
		
		//atribut untuk menambahkan absensi
		JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);
		int status = 0;
		
		if(id_app == id_aplikasi){
			if(api_key.equals(api_keydb)){
				//menambahkan data log_api
				logDAO.tambah(id_aplikasi, id_method);
				
				String stts;
				int now_db = 0;
				int min_db = 0;
				int sec_db = 0;
				
				List<Map<String, Object>> now = jdbcTemplate.queryForList("SELECT TIME(now()) as now");
				
				for (Map<String, Object> nows : now){
					now_db = Integer.parseInt(String.valueOf(nows.get("now")).substring(0, 2));
					min_db = Integer.parseInt(String.valueOf(nows.get("now")).substring(3, 5));
					sec_db = Integer.parseInt(String.valueOf(nows.get("now")).substring(6, 8));
				}
				
				now_db = 7 - now_db;
				min_db = 40 - min_db;
				sec_db = 0 - sec_db;
				
				if(now_db > 0){
					stts = "PRESENT";
				}
				else if(now_db == 0){
					if(min_db >= 0){
						if(sec_db >= 0){
							stts = "PRESENT";
						}
						else{
							stts = "LATE";
						}
					}
					else{
						stts = "LATE";
					}
				}
				else{
					stts = "LATE";
				}
				
				//String query = "INSERT INTO oasys_attendance_log(id_pegawai,date_time,status,long_lat) VALUES ('" + id_pegawai + "',now(),'" + stts + "','" + long_lat + "')";
				
				status = jdbcTemplate.update("INSERT INTO oasys_attendance_log(id_pegawai,date_time,status,long_lat) VALUES (?,now(),?,?)", id_pegawai, stts, long_lat);
			}
		}
			if(status == 1){
				status = 100;
			}
			else{
				status = 104;
			}
			return status;
	}
	
	@Override
	public int tidak_hadir(String id_pegawai, String stts, String api_key){
		ApplicationContext ctx = new ClassPathXmlApplicationContext("spring.xml");
        MethodAPIDAO methodDAO = ctx.getBean("methodAPIDAO", MethodAPIDAO.class);
        AplikasiAPIDAO aplikasiDAO = ctx.getBean("aplikasiAPIDAO", AplikasiAPIDAO.class);
        LogAPIDAO logDAO = ctx.getBean("logAPIDAO", LogAPIDAO.class);
        ApiAksesDAO apiDAO = ctx.getBean("apiAksesDAO", ApiAksesDAO.class);
        
        //atribut untuk mengambil data aplikasi dan method
		int id_method;
		String api_keydb;
		int id_aplikasi;
		int id_app;
		String nama_method = "absensi_mobile/tidak_hadir";
		Aplikasi_api aplikasi_api = new Aplikasi_api();
		Api_akses app_akses = new Api_akses();
		
		aplikasi_api = aplikasiDAO.get_aplikasi_detail(api_key);
		id_aplikasi = aplikasi_api.getId_aplikasi();
		api_keydb = aplikasi_api.getApi_key(); 
		
		id_method = methodDAO.get_id(nama_method);
		
		app_akses = apiDAO.get_by_method(id_method);
		id_app = app_akses.getId_aplikasi();
		
		//atribut untuk menambahkan absensi
		JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);
		int status = 0;
		
		if(id_app == id_aplikasi){
			if(api_key.equals(api_keydb)){
				//menambahkan data log_api
				logDAO.tambah(id_aplikasi, id_method);
				
				//String query = "INSERT INTO oasys_absent_reason_log(id_pegawai,date_time,status) VALUES ('" + id_pegawai + "',now(),'" + stts + "')";
				
				status = jdbcTemplate.update("INSERT INTO oasys_absent_reason_log(id_pegawai,date_time,status) VALUES (?,now(),?)", id_pegawai, stts);
			}
		}
		if(status == 1){
			status = 100;
		}
		else{
			status = 104;
		}
		
		return status;
	}
	
	public List<Absensi_mobile> get_attendance(String id_pegawai, String api_key){
		ApplicationContext ctx = new ClassPathXmlApplicationContext("spring.xml");
        MethodAPIDAO methodDAO = ctx.getBean("methodAPIDAO", MethodAPIDAO.class);
        AplikasiAPIDAO aplikasiDAO = ctx.getBean("aplikasiAPIDAO", AplikasiAPIDAO.class);
        LogAPIDAO logDAO = ctx.getBean("logAPIDAO", LogAPIDAO.class);
        ApiAksesDAO apiDAO = ctx.getBean("apiAksesDAO", ApiAksesDAO.class);
        
        //atribut untuk mengambil data aplikasi dan method
		int id_method;
		String api_keydb;
		int id_aplikasi;
		int id_app;
		String nama_method = "absensi_mobile/get_attendance";
		Aplikasi_api aplikasi_api = new Aplikasi_api();
		Api_akses app_akses = new Api_akses();
		
		aplikasi_api = aplikasiDAO.get_aplikasi_detail(api_key);
		id_aplikasi = aplikasi_api.getId_aplikasi();
		api_keydb = aplikasi_api.getApi_key(); 
		
		id_method = methodDAO.get_id(nama_method);
		
		app_akses = apiDAO.get_by_method(id_method);
		id_app = app_akses.getId_aplikasi();
		
		//atribut untuk menampilkan data absensi
		JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);
		List<Absensi_mobile> absList = new ArrayList<Absensi_mobile>();
		Absensi_mobile abs_error = new Absensi_mobile();
		
		if(id_app == id_aplikasi){
			if(api_key.equals(api_keydb)){
				//menambahkan data log_api
				logDAO.tambah(id_aplikasi, id_method);
				
				List<Map<String, Object>> absRows = jdbcTemplate.queryForList("SELECT * FROM `oasys_attendance_log` WHERE month(date_time) = month(now()) AND id_pegawai=?", id_pegawai);
				
				for (Map<String, Object> absRow : absRows){
					Absensi_mobile abs = new Absensi_mobile();
					abs.setId(Integer.parseInt(String.valueOf(absRow.get("id"))));
					abs.setId_pegawai(Integer.parseInt(String.valueOf(absRow.get("id_pegawai"))));
					abs.setDate_time(String.valueOf(absRow.get("date_time")));
					abs.setStatus(String.valueOf(absRow.get("status")));
					abs.setLong_lat(String.valueOf(absRow.get("long_lat")));
					absList.add(abs);
				}
			}
			else{
				abs_error.setRequest_status(101);
				absList.add(abs_error);
			}
		}
		else{
			abs_error.setRequest_status(101);
			absList.add(abs_error);
		}
		return absList;
	}
}